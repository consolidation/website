import{_ as i,c as a,o as e,ah as t}from"./chunks/framework.DeYX_sqr.js";const c=JSON.parse('{"title":"Gulp Tasks","description":"","frontmatter":{},"headers":[],"relativePath":"tasks/Gulp.md","filePath":"tasks/Gulp.md"}'),l={name:"tasks/Gulp.md"};function n(p,s,o,r,h,d){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="gulp-tasks" tabindex="-1">Gulp Tasks <a class="header-anchor" href="#gulp-tasks" aria-label="Permalink to “Gulp Tasks”">​</a></h1><h2 id="run" tabindex="-1">Run <a class="header-anchor" href="#run" aria-label="Permalink to “Run”">​</a></h2><p>Gulp Run</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// simple execution</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">taskGulpRun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// run task &#39;clean&#39; with --silent option</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">taskGulpRun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;clean&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">silent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?&gt;</span></span></code></pre></div><ul><li><code>noColor()</code> adds <code>--no-color</code> option to gulp</li><li><code>color()</code> adds <code>--color</code> option to gulp</li><li><code>simple()</code> adds <code>--tasks-simple</code> option to gulp</li><li><code>setOutput($output)</code> Sets the Console Output.</li><li><code>setProcessInput($input)</code> Pass an input to the process. Can be resource created with fopen() or string</li><li><code>dir($dir)</code> Changes working directory of command</li><li><code>arg($arg)</code> Pass argument to executable. Its value will be automatically escaped.</li><li><code>args($args)</code> Pass methods parameters as arguments to executable. Argument values</li><li><code>rawArg($arg)</code> Pass the provided string in its raw (as provided) form as an argument to executable.</li><li><code>option($option, $value = null, $separator = null)</code> Pass option to executable. Options are prefixed with <code>--</code> , value can be provided in second parameter.</li><li><code>options(array $options, $separator = null)</code> Pass multiple options to executable. The associative array contains</li><li><code>optionList($option, $value = null, $separator = null)</code> Pass an option with multiple values to executable. Value can be a string or array.</li></ul>`,5)])])}const u=i(l,[["render",n]]);export{c as __pageData,u as default};
