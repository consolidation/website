import{_ as s,c as a,o as e,ah as t}from"./chunks/framework.DeYX_sqr.js";const c=JSON.parse('{"title":"Archive Tasks","description":"","frontmatter":{},"headers":[],"relativePath":"tasks/Archive.md","filePath":"tasks/Archive.md"}'),h={name:"tasks/Archive.md"};function l(n,i,p,r,k,d){return e(),a("div",null,[...i[0]||(i[0]=[t(`<h1 id="archive-tasks" tabindex="-1">Archive Tasks <a class="header-anchor" href="#archive-tasks" aria-label="Permalink to “Archive Tasks”">​</a></h1><h2 id="extract" tabindex="-1">Extract <a class="header-anchor" href="#extract" aria-label="Permalink to “Extract”">​</a></h2><p>Extracts an archive.</p><p>Note that often, distributions are packaged in tar or zip archives where the topmost folder may contain variable information, such as the release date, or the version of the package. This information is very useful when unpacking by hand, but arbitrarily-named directories are much less useful to scripts. Therefore, by default, Extract will remove the top-level directory, and instead store all extracted files into the directory specified by $archivePath.</p><p>To keep the top-level directory when extracting, use <code>preserveTopDirectory(true)</code>.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">taskExtract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($archivePath)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($destination)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preserveTopDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// the default</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?&gt;</span></span></code></pre></div><ul><li><code>to($to)</code> Location to store extracted files.</li><li><code>preserveTopDirectory($preserve = null)</code> * <code>param bool</code> $preserve</li><li><code>setOutput($output)</code> Sets the Console Output.</li><li><code>getBuiltTask($fn, $args)</code> Provides the collection builder with access to all of the</li></ul><h2 id="pack" tabindex="-1">Pack <a class="header-anchor" href="#pack" aria-label="Permalink to “Pack”">​</a></h2><p>Creates a zip or tar archive.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">taskPack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">archiveFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;README&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Puts file &#39;README&#39; in archive at the root</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;project&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)                        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Puts entire contents of directory &#39;project&#39; in archinve inside &#39;project&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dir/file.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Takes &#39;file.txt&#39; from cwd and puts it in archive inside &#39;dir&#39;.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exclude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dir\\/.*.zip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.*.md&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Add regex (or array of regex) to the excluded patterns list.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?&gt;</span></span></code></pre></div><ul><li><code>archiveFile($archiveFile)</code> * <code>param string</code> $archiveFile</li><li><code>addFile($placementLocation, $filesystemLocation)</code> Add an item to the archive. Like file_exists(), the parameter</li><li><code>addDir($placementLocation, $filesystemLocation)</code> Alias for addFile, in case anyone has angst about using</li><li><code>add($item)</code> Add a file or directory, or list of same to the archive.</li><li><code>exclude($ignoreList)</code> Allow files or folder to be excluded from the archive. Use regex, without enclosing slashes.</li><li><code>setOutput($output)</code> Sets the Console Output.</li></ul>`,11)])])}const g=s(h,[["render",l]]);export{c as __pageData,g as default};
